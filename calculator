
import pandas as pd
import tkinter as tk
from tkinter import messagebox, Label
from tkinter.filedialog import askopenfilename
from l_squares import *

data = None


# читання даних з файлу
def open_file():
    global data  # обов'язково вказати, що ми змінюємо глобальну змінну
    file_path = askopenfilename(
        title="Оберіть файл",
        filetypes=[
            ("csv файли", "*.csv"),
            ("exel файли", "*.xlsx"),
            ("текстові файли", "*.txt")
        ]
    )
    if not file_path:
        return
    try:
        if file_path.endswith(".csv") or file_path.endswith(".txt"):
            data = pd.read_csv(file_path, sep=";")
        elif file_path.endswith(".xlsx"):
            data = pd.read_excel(file_path)
        else:
            raise ValueError("Невідомий формат файлу")
        label.config(text="файл завантажено " + file_path.split("/")[-1])

        print(data["x"].values, data["y"].values)


        # Виводимо значення в графічному інтерфейсі
        x_vals = "; ".join(map(str, data["x"].values))
        y_vals = "; ".join(map(str, data["y"].values))
        x_data_label.config(text="дані х: " + x_vals)
        y_data_label.config(text="дані у: " + y_vals)

    except Exception as e:
        label.config(text="помилка при обробці файлу")
        print("помилка з завантаженням файлу", e)
    finally:
        x_data_label2 = tk.Label(root, text=data["x"].values)
        y_data_label2 = tk.Label(root, text=data["x"].values)


# Обробка зчитаних з файлу даних
def process_file_data():
    global data
    if data is not None:
        try:
            x = np.array(data["x"].values)
            y = np.array(data["y"].values)
            a, b = find_least_sqrt(x, y)
            messagebox.showinfo("Результат", f"Коефіцієнти:\na = {a:.4f}\nb = {b:.4f}")

        except Exception as e:
            messagebox.showerror("Помилка", f"Помилка обробки даних: {e}")
    else:
        messagebox.showerror("Помилка", "Дані з файлу ще не завантажено")


# завантаження вручну введених даних
def load_data_from_text():
    try:
        x_raw = entry1.get("1.0", "end-1c").strip()
        y_raw = entry2.get("1.0", "end-1c").strip()

        if "," in x_raw or "," in y_raw:
            raise ValueError("Використовуйте крапку як роздільник дробової частини")

        # Розбиваємо по крапці з комою, видаляємо порожні елементи
        x = [float(val.strip()) for val in x_raw.split(";") if val.strip()]
        y = [float(val.strip()) for val in y_raw.split(";") if val.strip()]

        if len(x) != len(y):
            raise ValueError(f"Кількість чисел у X ({len(x)}) і Y ({len(y)}) не збігається")

        label.config(text="Дані отримано")
        print("X:", x)
        print("Y:", y)

        a, b = find_least_sqrt(np.array(x), np.array(y))
        messagebox.showinfo("Результат", f"Коефіцієнти:\na = {a:.4f}\nb = {b:.4f}")


    except Exception as e:
        messagebox.showerror("Помилка", f"Неправильний формат даних: {e}")


# змінення висоти вікна
def adjust_text_height(event=None):
    text_widget = event.widget
    text_widget.update_idletasks()
    try:
        bbox = text_widget.bbox("end-1c")
        if bbox:
            y = bbox[1]
            line_height = text_widget.dlineinfo("1.0")[3]
            new_height = (y // line_height) + 2
            text_widget.config(height=new_height)
    except:
        pass


# функція для того щоб можна вставляти дані з клавіатури
def handle_paste(event=None):
    root.after(50, lambda: adjust_text_height(event))
    return None

def go_back_to_main():
    # Ховаємо всі динамічні елементи
    x_label.place_forget()
    entry1.place_forget()
    y_label.place_forget()
    entry2.place_forget()
    button_send.place_forget()
    x_data_label.place_forget()
    y_data_label.place_forget()
    button_send2.place_forget()
    back_button_manual.place_forget()
    back_button_file.place_forget()

    # Показуємо головні кнопки
    button_files.place(x=450, y=100)
    button_text.place(x=250, y=100)
    label.config(text="натисніть кнопку щоб вибрати файл або введіть дані вручну")



# Дії при натисканні на "ввести текст вручну"
def show_manual_input():
    button_files.place_forget()
    button_text.place_forget()
    button_send2.place_forget()
    x_data_label.place_forget()
    y_data_label.place_forget()
    x_label.place(x=175, y=50)
    entry1.place(x=25, y=75, width=350)
    y_label.place(x=575, y=50)
    entry2.place(x=425, y=75, width=350)
    button_send.place(x=575, y=300)
    back_button_manual.place(x=25, y=300)


# Дії при натисканні на "вибрати файл"
def choose_file_and_hide_text_button():
    button_text.place_forget()
    button_files.place_forget()
    button_send2.place(x=675, y=300)
    x_data_label.place(x=25, y=50)
    y_data_label.place(x=25, y=100)
    back_button_file.place(x=25, y=300)
    open_file()


# Головне вікно
root = tk.Tk()
root.title("Калькулятор")
root.geometry("800x800")

label = Label(root, text="натисніть кнопку щоб вибрати файл або введіть дані вручну")
label.pack()

# Кнопки вибору
button_files = tk.Button(root, text="вибрати файл", command=choose_file_and_hide_text_button)
button_files.place(x=450, y=100)

button_text = tk.Button(root, text="ввести дані вручну", command=show_manual_input)
button_text.place(x=250, y=100)

# Кнопка відправлення
button_send = tk.Button(root, text="відправити ввeдені вручну дані", command=load_data_from_text)

# кнопка завантадення даних
button_send2 = tk.Button(root, text="завантажити дані", command=process_file_data)

# Кнопки "повернутися"
back_button_manual = tk.Button(root, text="повернутися на попередню сторінку", command=go_back_to_main)
back_button_file = tk.Button(root, text="повернутися на попередню сторінку", command=go_back_to_main)


# Поле X
x_label = tk.Label(root, text="Введіть х:")
entry1 = tk.Text(root, wrap="word", font=("Arial", 12), height=1)
entry1.bind("<KeyRelease>", adjust_text_height)
entry1.bind("<<Paste>>", handle_paste)
entry1.bind("<Control-v>", handle_paste)
entry1.bind("<Command-v>", handle_paste)

# Поле Y
y_label = tk.Label(root, text="Введіть у:")
entry2 = tk.Text(root, wrap="word", font=("Arial", 12), height=1)
entry2.bind("<KeyRelease>", adjust_text_height)
entry2.bind("<<Paste>>", handle_paste)
entry2.bind("<Control-v>", handle_paste)
entry2.bind("<Command-v>", handle_paste)

# ввеедені коритувачем X
x_data_label = tk.Label(root, text="дані х:")
y_data_label = tk.Label(root, text="дані х:")
entry1 = tk.Text(root, wrap="word", font=("Arial", 12), height=1)

# Введені користувачем Y
y_data_label = tk.Label(root, text="дані у:")
entry2 = tk.Text(root, wrap="word", font=("Arial", 12), height=1)

x_data_label = tk.Label(root, text="дані х:")
y_data_label = tk.Label(root, text="дані у:")

# Початкове оновлення висоти
root.after(100, lambda: adjust_text_height(type('Event', (object,), {'widget': entry1})))
root.after(100, lambda: adjust_text_height(type('Event', (object,), {'widget': entry2})))

root.mainloop()





